---
description: 
globs: 
alwaysApply: false
---
这是一个工作流节点报错捕获的设计文档。

# 背景

现在工作流运行节点若其中有一个报错，则整个工作流中断，无法继续运行，只有红色英文toast，不太友好。对于对工作流可控性要求高的用户，愿意通过编排为报错兜底。现有编排较麻烦。

这类似于代码里的 try catch 机制，用户可以获得 catch 的错误，而不是直接抛错并结束工作流。

# 实现效果

1. 部分节点可以拥有报错捕获选项，也就是 node 里 catchError 不为 undefined 的节点，catchError=true 代表启用报错捕获，catchError=false 代表不启用报错捕获。
2. 支持报错捕获节点，在输出栏右侧会有一个“错误捕获”的开关。
3. node 的 output 属性种，有一个`errorField`的字段，标识该输出是开启报错捕获时候，才会拥有的输出。
4. 开启报错捕获的节点，在运行错误时，不会阻塞后续节点运行，而是输出报错信息，并继续向下执行。
5. 开启报错捕获的节点，会多出一个“错误输出”的分支连线，错误时候会走错误的分支提示。

# 实现方案

1. FlowNodeCommonType 属性上增加一个`catchError`的可选 boolean 值。如果需要报错捕获的节点，则设置 true/false，标识启用报错捕获，并且设置默认是否启用报错捕获。
2. FlowNodeOutputTypeEnume增加一个 error 枚举值，表示该字段是错误时候才展示的输出。
3. IOTitle 组件里接收 catchError 字段，如果为 true，则在右侧展示“错误捕获”的开关。
4. 所有现有的 RenderOutput 的组件，都需要改造。传入的 flowOutputList 都不包含 hidden 和 error类型的。
5. 单独在`FastGPT/projects/app/src/pageComponents/app/detail/WorkflowComponents/Flow/nodes/render/RenderOutput`下新建一个`CatchError`的组件，用于专门渲染错误类型输出，同时有一个 SourceHandler。
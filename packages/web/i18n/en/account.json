{
  "account_team.delete_dataset": "Delete knowledge base",
  "active_model": "Available models",
  "add_default_model": "Add preset model",
  "api_key": "API keys",
  "bills_and_invoices": "Bills and fapiaos",
  "channel": "Model channels",
  "config_model": "Model settings",
  "confirm_logout": "Are you sure you want to log out?",
  "create_channel": "Add",
  "create_model": "Add",
  "custom_model": "Custom model",
  "default_model": "Preset model",
  "default_model_config": "Default model settings",
  "logout": "Log out",
  "model.active": "Enable",
  "model.alias": "Alias",
  "model.alias_tip": "Display name of the model in the system for easier understanding.",
  "model.censor": "Sensitive content detection",
  "model.censor_tip": "Enable this if sensitive content detection is required.",
  "model.charsPointsPrice": "Overall price",
  "model.charsPointsPrice_tip": "Combine input and output for token billing. If input and output prices are configured separately, they will be calculated individually.",
  "model.custom_cq_prompt": "Custom prompt for question classification",
  "model.custom_cq_prompt_tip": "Overwrite the default system prompt for question classification. Default:\n\"\"\"\n{{prompt}}\n\"\"\"",
  "model.custom_extract_prompt": "Custom prompt for content extraction",
  "model.custom_extract_prompt_tip": "Overwrite the default system prompt. Default:\n\"\"\"\n{{prompt}}\n\"\"\"",
  "model.dataset_process": "Knowledge base file processing",
  "model.defaultConfig": "Additional Body parameter",
  "model.defaultConfig_tip": "The additional Body parameter will be included in each request.",
  "model.default_config": "Additional Body field",
  "model.default_config_tip": "Merge these settings when users send a chat request. Example:\n\"\"\"\n{\n   \"temperature\": 1,\n   \"max_tokens\": null\n}\n\"\"\"",
  "model.default_model": "Default model",
  "model.default_system_chat_prompt": "Default prompt",
  "model.default_system_chat_prompt_tip": "The default prompt will be included in all chats using the model.",
  "model.default_token": "Default chunk size",
  "model.default_token_tip": "Default text chunk size for indexing models, which must be smaller than the maximum context length.",
  "model.delete_model_confirm": "Are you sure you want to delete the model?",
  "model.edit_model": "Edit model",
  "model.function_call": "Function calling",
  "model.function_call_tip": "Enable this if the model supports function calling. Tool calling takes higher priority.",
  "model.input_price": "Input price",
  "model.input_price_tip": "If configured, the overall price will become invalid.",
  "model.json_config": "Configuration file",
  "model.json_config_confirm": "Are you sure you want to apply the configuration?",
  "model.json_config_tip": "You can use the configuration file to overwrite the current model configuration. Please make sure the file is correct and back up the current configuration first.",
  "model.max_quote": "Max knowledge base references",
  "model.max_temperature": "Max temperature",
  "model.model_id": "Model ID",
  "model.model_id_tip": "Unique identifier of the model. This must match the model value from the provider and correspond to the OneAPI channel.",
  "model.normalization": "Normalization",
  "model.normalization_tip": "If the Embedding API does not normalize vectors, enable this option to let the system normalize them.\nWithout normalization, the vector search score will be greater than 1.",
  "model.output_price": "Output price",
  "model.output_price_tip": "If configured, the overall price will become invalid.",
  "model.param_name": "Parameter name",
  "model.reasoning": "Reasoning output",
  "model.reasoning_tip": "For example, Deepseek-reasoner can output the reasoning process.",
  "model.request_auth": "Custom request key",
  "model.request_auth_tip": "TThe header Authorization: Bearer xxx will be included in the requests sent to the custom request URL.",
  "model.request_url": "Custom request URL",
  "model.request_url_tip": "If specified, requests will be sent directly to this address without going through OneAPI. Follow the OpenAI API format and provide a complete request URL. Example:\nLLM: {{host}}/v1/chat/completions\nEmbedding: {{host}}/v1/embeddings\nSTT: {{host}}/v1/audio/transcriptions\nTTS: {{host}}/v1/audio/speech\nRerank: {{host}}/v1/rerank",
  "model.response_format": "Response format",
  "model.show_stop_sign": "Show stop sequence parameter",
  "model.show_top_p": "Show Top-p parameter",
  "model.test_model": "Test model",
  "model.tool_choice": "Tool calling",
  "model.tool_choice_tag": "Tool call",
  "model.tool_choice_tip": "Enable this if the model supports tool calling.",
  "model.used_in_classify": "Question classification",
  "model.used_in_extract_fields": "Text extraction",
  "model.used_in_query_extension": "Question optimization",
  "model.used_in_tool_call": "Tool calling node",
  "model.vision": "Image recognition",
  "model.vision_tag": "Vision",
  "model.vision_tip": "Enable this if the model supports image recognition.",
  "model.voices": "Voice role",
  "model.voices_tip": "Configure multiple roles using an array. Example:\n[\n  {\n    \"label\": \"Alloy\",\n    \"value\": \"alloy\"\n  },\n  {\n    \"label\": \"Echo\",\n    \"value\": \"echo\"\n  }\n]",
  "model_provider": "Models",
  "notifications": "Notification",
  "personal_information": "Profile",
  "personalization": "Personalization",
  "promotion_records": "Promotion records",
  "reset_default": "Restore defaults",
  "team": "Teams",
  "third_party": "Third-party account",
  "usage_records": "Usage"
}

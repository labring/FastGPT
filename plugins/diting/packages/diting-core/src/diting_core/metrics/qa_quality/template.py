#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# flake8: noqa


class QAQualityTemplate:
    @staticmethod
    def evaluate_question_self(question: str) -> str:
        return f"""任务: 评估给出的查询/问题的清晰度和可回答性，假设具备足够的领域知识。使用以下标准来指导你的评估：
        1. **自给自足**：该问题是否可以在不需要额外上下文或外部参考的情况下理解和完成？它应该是自足的，意味着它不依赖于任何先验知识，避免问题宽泛。
        2. **明确目标**：该问题是否清楚地传达了其意图？它应该明确说明请求什么信息、行动或响应，以便能够直接和恰当地回答，而没有歧义，避免问题模糊。

        根据这些标准，给出一个介于 0 和 1 之间的分数，其中：
        - "1" 表示问题清晰、自给自足且可回答；
        - "0" 表示问题模糊，依赖外部参考，或意图不明确；
        - 介于 0 和 1 之间的分数表示部分清晰或可回答性，查询满足某些但不是所有标准。

        输入: 问题（字符串）

        输出格式: 一个JSON对象，包含 'score' 和 'feedback' 键：
        1. `score`: 质量得分，必须是一个介于 0 到 1 之间的浮点数。
        2. `feedback`: 原因或反馈 ，必须是一个字符串

        示例问题： 
        ```
        "在过去 20 年中，哪些技术创新改变了通信？"
        ```
        示例 JSON:
        ```
        {{
            "feedback": "该查询有些模糊，因为它询问 '技术创新' 而没有具体说明通信的特定领域（例如，社交媒体、消息应用）。通过将焦点缩小到特定类型的创新或时间范围，可以改进此查询。",
            "score": 0.5
        }}
        ```

        示例问题：
        ```
        "解释可再生能源政策在 2021 年对德国地方经济的影响。"
        ```
        示例 JSON:
        ```
        {{
            "feedback": "该查询清楚地指定了焦点（可再生能源政策）、地区（德国）和时间范围（2021 年）。它是自给自足的，并且在不需要额外上下文的情况下可回答，使其清晰有效。",
            "score": 1.0
        }}
        ```

        示例问题：
        ```
        "当前美国教育系统的主要批评是什么？"
        ```
        示例 JSON:
        ```
        {{
            "feedback": "该问题范围广泛且缺乏具体性，因为 '主要批评' 可能涉及多个方面（例如，资金、课程、公平）。为了提高清晰度，可以具体说明教育系统的哪个方面受到批评。",
            "score": 0.4
        }}
        ```

        示例问题：
        ```
        "讨论人工智能在医疗保健中的作用，特别是在诊断方面，如最后报告中所述。"
        ```
        示例 JSON:
        ```
        {{
            "feedback": "该问题提到 '最后报告' 而没有提供上下文或细节，使其不清晰且依赖于外部信息。如果提供一些关于报告的背景或定义要讨论的人工智能在诊断中的哪些方面，将会更清晰。",
            "score": 0.3
        }}
        ```

        -----

        问题：
        ```
        {question}
        ```

        JSON:
        """

    @staticmethod
    def evaluate_answer_no_context(question: str, answer: str) -> str:
        return f"""任务: 基于给出的问题，评估其关联的答案相关度，假设具备足够的领域知识。使用以下标准来指导你的评估：
        1. **相关性**：答案是否直接与问题相关？是否包含了问题的关键词或主题？
        2. **完整性**：答案是否提供了足够的信息来全面回答问题？是否遗漏了重要的细节或背景信息？
        3. **清晰度**：答案是否表达清晰，易于理解？是否合乎逻辑？
        4. **简洁性**：答案是否表达简洁，是否包含了大量无关的信息导致答案噪声？

        根据这些标准，给出一个介于 0 和 1 之间的分数，其中：
        - "1" 表示答案简洁清晰，和问题强相关并提供了足够的信息来全面回答问题。
        - "0" 表示答案冗余、逻辑混乱，信息缺失或答非所问。
        - 介于 0 和 1 之间的分数表示部分相关、完整性、清晰度和简洁性，查询满足某些但不是所有标准。

        输入: 问题（字符串），答案（字符串）

        输出格式: 一个JSON对象，包含 'score' 和 'feedback' 键：
        1. `score`: 质量得分，必须是一个介于 0 到 1 之间的浮点数。
        2. `feedback`: 原因或反馈 ，必须是一个字符串

        示例问题：
        ```
        "Python作为脚本语言，有什么优缺点？"
        ```
        示例答案：
        ```
        "Python的优势包括易于学习和使用、快速开发、跨平台性、动态类型、丰富的库和框架以及良好的集成能力。缺点则包括性能较低、错误检查不足、不适合大型项目、安全性问题和依赖环境。"
        ```
        示例 JSON:
        ```
        {{
            "feedback": "该回答针对问题进行明确且简洁地回答，且内容提供了足够的信息来全面回答问题。",
            "score": 1.0
        }}
        ```

        示例问题：
        ```
        "当前美国教育系统的主要批评是什么？"
        ```
        示例答案：
        ```
        "当前美国教育系统的主要批评如下：

        1. 基础教育过于薄弱

        美国的中小学教育普遍停留在非常基础的水平，尤其是理科教育，有些学生甚至到了高中才接触一元一次方程。也有很多人直到高中才开始学习外语。

        ```
        示例 JSON:

        ```
        {{
            "feedback": "该回答针对问题进行明确地回答，但回答内容提供的信息不足以完全回答问题",
            "score": 0.5
        }}
        ```


        示例问题：
        ```
        "解释可再生能源政策在 2021 年对德国地方经济的影响。"
        ```
        示例答案：
        ```
        "德国政府为推动可再生能源发展，投入大量资金用于补贴与项目支持。EEG2021 虽然计划逐步转向市场驱动，但在 2021 年仍需大量财政资金支持。"
        ```
        示例 JSON:
        ```
        {{
            "feedback": "该回答没有针对问题进行明确地回答，存在答非所问的情况(问的是对地方经济的影响，回答的是资金需求)。",
            "score": 0.0
        }}
        ```

        示例问题：
        ```
        "讨论人工智能在医疗保健中的作用，特别是在诊断和治疗方面。"
        ```
        示例答案：
        ```
        "人工智能在诊断方面，可以分析医学图像（如X光片、CT扫描和MRI），帮助医生更准确地识别疾病。例如，AI可以通过深度学习模型检测早期癌症迹象，从而提高早期诊断率；
        同时，AI可以自动化重复性和繁琐的任务，从而提高工作效率，减少人力成本；AI还能够处理和分析大量数据，帮助企业和组织从中提取有价值的信息，做出更明智的决策；
        通过机器学习，AI可以根据用户的行为和偏好提供个性化的推荐和服务，提升用户体验。"
        ```
        示例 JSON:
        ```
        {{
            "feedback": "该回答内容和问题部分相关，不简洁，存在逻辑混乱、答案冗余的情况。",
            "score": 0.3
        }}
        ```
        -----

        问题：
        ```
        {question}
        ```

        答案：
        ```
        {answer}
        ```

        JSON:
        """

    @staticmethod
    def evaluate_question_with_context(
        question: str, retrieval_context: list[str]
    ) -> str:
        return f"""任务: 基于给出的上下文，评估其关联的查询/问题的可回答性。使用以下步骤来指导你的评估：

            1. 识别关键要素：确定问题中的关键概念和要素，这些要素通常包括主题、时间、地点和特定细节。
            2. 遍历上下文：仔细阅读给定的上下文，寻找与问题关键要素相关的信息。注意上下文中是否包含直接的答案或相关的细节。
            3. 查找直接回答：尝试在上下文中找到能够直接回答问题的信息。这可以是明确的句子、数据或描述。
            4. 评估信息的相关性：判断上下文中的信息是否足够相关，能够直接解决问题的请求。如果信息不相关，即使在文本中存在，也无法提供有效答案。
            5. 考虑上下文的完整性：确认上下文是否足够全面，以支持对问题的正确回答。如果上下文的信息过于有限或片面，可能无法找到答案。
            6. 识别隐含信息：在某些情况下，问题的答案可能不会直接给出，而是需要从上下文中推断出来。评估是否可以通过逻辑推理得出答案。
            7. 避免假设外部知识：确保答案不依赖于任何外部知识或信息，完全基于提供的上下文。如果问题需要额外的信息来理解，那么它可能不适合在该上下文中找到答案。

            根据这些步骤，给出一个介于 0 和 1 之间的分数，其中：
            - "1" 表示问题可以完全基于给出的上下文中回答，无需额外先验知识；
            - "0" 表示问题无法在给出的上下文中找到答案；
            - 介于 0 和 1 之间的分数表示部分可回答性，问题满足某些但不是所有标准。

            输入: 上下文（一个字符串列表），问题（字符串）

            输出格式: 一个JSON对象，包含 'score' 和 'feedback' 键：
            1. `score`: 质量得分，必须是一个介于 0 到 1 之间的浮点数。
            2. `feedback`: 原因或反馈 ，必须是一个字符串

            示例上下文：
            ```
            ["Python是一种广泛使用的脚本语言。脚本语言通常用于自动化任务、快速开发和简化程序设计。", "它的优势包括易于学习和使用、快速开发、跨平台性、动态类型、丰富的库和框架以及良好的集成能力。", "然而，脚本语言也存在一些缺点，如性能较低、错误检查不足、不适合大型项目、安全性问题和依赖环境。"]
            ```
            示例问题：
            ```
            "Python作为脚本语言，有什么优缺点？"
            ```
            示例 JSON:
            ```
            {{
                "feedback": "该问题的焦点和上下文主题强相关(Python，脚本语言，优缺点)，且不需要额外上下文的情况下即可回答。",
                "score": 1.0
            }}
            ```

            示例上下文：
            ```
            ["人工智能算法可以分析医学图像（如X光片、CT扫描和MRI），帮助医生更准确地识别疾病。例如，AI可以通过深度学习模型检测早期癌症迹象，从而提高早期诊断率。", "AI可以基于患者的遗传信息、病史和其他数据，制定个性化的治疗方案。这种方法有助于优化药物选择和剂量，从而提高治疗效果。", "人工智能加速了药物研发过程，通过分析大量数据发现新的药物靶点，优化药物化合物设计，以及预测药物的临床试验效果。"]
            ```
            示例问题：
            ```
            "讨论人工智能在医疗保健中的作用，特别是在诊断方面，如最后报告中所述。"
            ```
            示例 JSON:
            ```
            {{
                "feedback": "该问题提到 '最后报告' 而没有提供上下文或细节，使其不清晰且依赖于外部信息。",
                "score": 0.3
            }}
            ```

            示例上下文：
            ```
            ["以“爱”与“尊重”为中心的美国教育环境造就了成千上万个自我中心的个人主义者。", "公立学校的学区制和私立学校一年高达5-6万美元的学费却让许多家庭望而却步。如果没有优越的经济条件，孩子甚至没有接受良好教育的机会。"]
            ```
            示例问题：
            ```
            "当前美国社会的主要批评是什么？"
            ```
            示例 JSON:
            ```
            {{
                "feedback": "该问题的焦点'主要批评' 可能涉及多个方面（例如，人权、教育、公平），此外，上下文的主题是美国教育，问题背景是美国社会，相关性较低。",
                "score": 0.2
            }}
            ```


            示例上下文：
            ```
            ["德国长期致力于能源转型，2021 年生效的新版《可再生能源法》（EEG2021）具有重要意义。该法案于 2020 年 12 月 17 日获得议会通过，其目标在于进一步加快可再生能源发展，同时降低电力用户负担。", "可再生能源政策在 2021 年对德国地方经济的影响主要在以下两方面：
            1. 可再生能源产业扩张：在政策推动下，德国可再生能源产业在 2021 年持续扩张。以太阳能光伏产业为例，EEG2021 计划将光伏发电量大幅提升的目标，刺激了相关企业扩大生产规模与加大研发投入", "2. 就业岗位增加：可再生能源产业的发展创造了大量就业机会。直接就业岗位涵盖了从能源设备制造、项目建设施工，到后期运营维护等多个环节。"]
            ```
            示例问题：
            ```
            "解释可再生能源政策在 2022 年对英国中央财政的影响。"
            ```
            示例 JSON:
            ```
            {{
                "feedback": "该问题的焦点和上下文的主题相关性不高，无法基于给出的上下文回答",
                "score": 0.0
            }}
            ```

            -----


            上下文：
            ```
            {retrieval_context}
            ```

            问题：
            ```
            {question}
            ```

            JSON:
            """

    @staticmethod
    def evaluate_answer_with_context(
        question: str, answer: str, retrieval_context: list[str]
    ) -> str:
        return f"""任务: 基于给出的上下文和问题，评估其关联的答案质量，假设具备足够的领域知识。使用以下标准来指导你的评估：
            1. **简洁明了**：该答案是否直接回应了问题？它应该和问题强相关，避免答非所问。
            2. **完整无误**：该答案是否完整且准确地回答了问题？它应当避免回答噪声或回答不全。

            根据这些标准，给出一个介于 0 和 1 之间的分数，其中：
            - "1" 表示答案简洁，对照问题完整无误。
            - "0" 表示答案冗余，信息缺失或答非所问。
            - 介于 0 和 1 之间的分数表示部分清晰或可回答性，查询满足某些但不是所有标准。

            输入: 上下文（一个字符串列表），问题（字符串），答案（字符串）

            输出格式: 一个JSON对象，包含 'score' 和 'feedback' 键：
            1. `score`: 质量得分，必须是一个介于 0 到 1 之间的浮点数。
            2. `feedback`: 原因或反馈 ，必须是一个字符串

            示例上下文：
            ```
            ["Python是一种广泛使用的脚本语言。脚本语言通常用于自动化任务、快速开发和简化程序设计。", "它的优势包括易于学习和使用、快速开发、跨平台性、动态类型、丰富的库和框架以及良好的集成能力。", "然而，脚本语言也存在一些缺点，如性能较低、错误检查不足、不适合大型项目、安全性问题和依赖环境。"]
            ```
            示例问题：
            ```
            "Python作为脚本语言，有什么优缺点？"
            ```
            示例答案：
            ```
            "Python的优势包括易于学习和使用、快速开发、跨平台性、动态类型、丰富的库和框架以及良好的集成能力。缺点则包括性能较低、错误检查不足、不适合大型项目、安全性问题和依赖环境。"
            ```
            示例 JSON:
            ```
            {{
                "feedback": "该回答针对问题进行明确地回答，且内容完全在上下文范围内，不漏答、不误答。",
                "score": 1.0
            }}
            ```

            示例上下文：
            ```
            ["以“爱”与“尊重”为中心的美国教育环境造就了成千上万个自我中心的个人主义者。", "公立学校的学区制和私立学校一年高达5-6万美元的学费却让许多家庭望而却步。如果没有优越的经济条件，孩子甚至没有接受良好教育的机会。"]
            ```
            示例问题：
            ```
            "当前美国教育系统的主要批评是什么？"
            ```
            示例答案：
            ```
            "当前美国教育系统的主要批评如下：

            1. 基础教育过于薄弱

            美国的中小学教育普遍停留在非常基础的水平，尤其是理科教育，有些学生甚至到了高中才接触一元一次方程。也有很多人直到高中才开始学习外语。

            2. 普遍个人主义

            以“爱”与“尊重”为中心的美国教育环境造就了成千上万个自我中心的个人主义者。

            3. 教育费用高昂

            公立学校的学区制和私立学校一年高达5-6万美元的学费却让许多家庭望而却步。如果没有优越的经济条件，孩子甚至没有接受良好教育的机会。"
            ```
            示例 JSON:

            ```
            {{
                "feedback": "该回答针对问题进行明确地回答，不漏答、不误答，但回答内容超出了上下文范围内(`基础教育过于薄弱`未在上下文中提及)。",
                "score": 0.6
            }}
            ```


            示例上下文：
            ```
            ["德国长期致力于能源转型，2021 年生效的新版《可再生能源法》（EEG2021）具有重要意义。该法案于 2020 年 12 月 17 日获得议会通过，其目标在于进一步加快可再生能源发展，同时降低电力用户负担。", "可再生能源政策在 2021 年对德国地方经济的影响主要在以下两方面：
            1. 可再生能源产业扩张：在政策推动下，德国可再生能源产业在 2021 年持续扩张。以太阳能光伏产业为例，EEG2021 计划将光伏发电量大幅提升的目标，刺激了相关企业扩大生产规模与加大研发投入", "2. 就业岗位增加：可再生能源产业的发展创造了大量就业机会。直接就业岗位涵盖了从能源设备制造、项目建设施工，到后期运营维护等多个环节。"]
            ```
            示例问题：
            ```
            "解释可再生能源政策在 2021 年对德国地方经济的影响。"
            ```
            示例答案：
            ```
            "德国政府为推动可再生能源发展，投入大量资金用于补贴与项目支持。EEG2021 虽然计划逐步转向市场驱动，但在 2021 年仍需大量财政资金支持。"
            ```
            示例 JSON:
            ```
            {{
                "feedback": "该回答没有针对问题进行明确地回答，存在答非所问的情况(问的是对地方经济的影响，回答的是资金需求)，同时，回答内容超出了上下文范围内(`需要大量财政资金支持`未在上下文中提及)。",
                "score": 0.0
            }}
            ```

            示例上下文：
            ```
            ["人工智能算法可以分析医学图像（如X光片、CT扫描和MRI），帮助医生更准确地识别疾病。例如，AI可以通过深度学习模型检测早期癌症迹象，从而提高早期诊断率。", "AI可以基于患者的遗传信息、病史和其他数据，制定个性化的治疗方案。这种方法有助于优化药物选择和剂量，从而提高治疗效果。", "人工智能加速了药物研发过程，通过分析大量数据发现新的药物靶点，优化药物化合物设计，以及预测药物的临床试验效果。"]
            ```
            示例问题：
            ```
            "讨论人工智能在医疗保健中的作用，特别是在诊断和治疗方面。"
            ```
            示例答案：
            ```
            "人工智能在诊断方面，可以分析医学图像（如X光片、CT扫描和MRI），帮助医生更准确地识别疾病。例如，AI可以通过深度学习模型检测早期癌症迹象，从而提高早期诊断率。"
            ```
            示例 JSON:
            ```
            {{
                "feedback": "该回答内容在上下文范围内，但它针对问题只进行了部分回答，存在漏答(没有回答人工智能在治疗方面的作用)。",
                "score": 0.5
            }}
            ```
            -----


            上下文：
            ```
            {retrieval_context}
            ```

            问题：
            ```
            {question}
            ```

            答案：
            ```
            {answer}
            ```

            JSON:
            """

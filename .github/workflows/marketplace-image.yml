name: Build and Deploy Marketplace

on:
  workflow_dispatch:
    inputs:
      base_url:
        description: 'Base URL for the application'
        required: false
        default: ''
        type: string
      tag:
        description: 'Docker image tag'
        required: false
        default: 'latest'
        type: string

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}/marketplace

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.14.0'
          cache: 'pnpm'

      - name: Install pnpm
        run: npm install -g pnpm@9.4.0

      - name: Install dependencies
        run: pnpm install

      - name: Log in to Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=raw,value=${{ github.event.inputs.tag || 'latest' }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./projects/marketplace/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            base_url=${{ github.event.inputs.base_url || '' }}
            proxy=${{ vars.PROXY || '' }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'workflow_dispatch'

    steps:
      - name: Deploy notification
        run: |
          echo "üöÄ Marketplace image has been built and pushed to registry"
          echo "üì¶ Image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.event.inputs.tag || 'latest' }}"
          echo "üåê Base URL: ${{ github.event.inputs.base_url || 'not specified' }}"

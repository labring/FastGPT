name: Build Marketplace images

on:
  workflow_dispatch:

jobs:
  build-marketplace-images:
    permissions:
      packages: write
      contents: read
      attestations: write
      id-token: write
    strategy:
      matrix:
        archs:
          - arch: amd64
          - arch: arm64
            runs-on: ubuntu-24.04-arm
    runs-on: ${{ matrix.archs.runs-on || 'ubuntu-24.04' }}
    steps:
      # install env
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: network=host

      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-${{ matrix.archs.arch }}-marketplace-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.archs.arch }}-marketplace-buildx-

      # login docker
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Login to Ali Hub
        uses: docker/login-action@v3
        with:
          registry: registry.cn-hangzhou.aliyuncs.com
          username: ${{ secrets.ALI_HUB_USERNAME }}
          password: ${{ secrets.ALI_HUB_PASSWORD }}

      - name: Build for ${{ matrix.archs.arch }}
        id: build
        uses: docker/build-push-action@v6
        with:
          context: .
          file: projects/marketplace/Dockerfile
          platforms: linux/${{ matrix.archs.arch }}
          labels: |
            org.opencontainers.image.source=https://github.com/${{ github.repository }}
            org.opencontainers.image.description=marketplace image
          outputs: type=image,"name=ghcr.io/${{ github.repository_owner }}/marketplace,${{ secrets.ALI_IMAGE_NAME }}/marketplace",push-by-digest=true,push=true
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

      - name: Export digest
        run: |
          mkdir -p ${{ runner.temp }}/digests/marketplace
          digest="${{ steps.build.outputs.digest }}"
          touch "${{ runner.temp }}/digests/marketplace/${digest#sha256:}"

      - name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: digests-marketplace-${{ github.sha }}-${{ matrix.archs.arch }}
          path: ${{ runner.temp }}/digests/marketplace/*
          if-no-files-found: error
          retention-days: 1

  release-marketplace-images:
    permissions:
      packages: write
      contents: read
      attestations: write
      id-token: write
    needs: build-marketplace-images
    runs-on: ubuntu-24.04
    steps:
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Login to Ali Hub
        uses: docker/login-action@v3
        with:
          registry: registry.cn-hangzhou.aliyuncs.com
          username: ${{ secrets.ALI_HUB_USERNAME }}
          password: ${{ secrets.ALI_HUB_PASSWORD }}

      - name: Download digests
        uses: actions/download-artifact@v4
        with:
          path: ${{ runner.temp }}/digests
          pattern: digests-marketplace-${{ github.sha }}-*
          merge-multiple: true

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Generate random tag
        id: tag
        run: |
          # Generate random hash tag (8 characters)
          TAG=$(echo $RANDOM | md5sum | head -c 8)
          echo "RANDOM_TAG=$TAG" >> $GITHUB_ENV
          echo "Generated tag: $TAG"

      - name: Set image name and tag
        run: |
          echo "Git_IMAGE=ghcr.io/${{ github.repository_owner }}/marketplace:${{ env.RANDOM_TAG }}" >> $GITHUB_ENV
          echo "Ali_IMAGE=${{ secrets.ALI_IMAGE_NAME }}/marketplace:${{ env.RANDOM_TAG }}" >> $GITHUB_ENV

      - name: Create manifest list and push
        working-directory: ${{ runner.temp }}/digests
        run: |
          echo "Pushing image with tag: ${{ env.RANDOM_TAG }}"
          TAGS="$(echo -e "${Git_Tag}\n${Ali_Tag}")"
          for TAG in $TAGS; do
            docker buildx imagetools create -t $TAG \
              $(printf 'ghcr.io/${{ github.repository_owner }}/marketplace@sha256:%s ' *)
            sleep 5
          done
          echo "âœ… Successfully pushed images:"
          echo "  - ${{ env.Git_IMAGE }}"
          echo "  - ${{ env.Ali_IMAGE }}"

# 用于部署的 docker-compose 文件:
# - 向量库为 Pgvector
# - FastGPT 端口映射为 3000:3000
# - FastGPT-mcp-server 端口映射 3005:3000
# - 建议修改账密后再运行

# plugin auth token
x-plugin-auth-token: &x-plugin-auth-token token
# aiproxy token
x-aiproxy-token: &x-aiproxy-token token
# 数据库连接相关配置
x-share-db-config: &x-share-db-config
  MONGODB_URI: mongodb://username:password@mongo:27017/fastgpt?authSource=admin
  DB_MAX_LINK: 30
  REDIS_URL: redis://default:mypassword@redis:6379
  S3_ENDPOINT: fastgpt-minio
  S3_PORT: 9000
  S3_USE_SSL: false
  S3_ACCESS_KEY: minioadmin
  S3_SECRET_KEY: minioadmin

# 向量库相关配置
x-vec-config: &x-vec-config
undefined

version: '3.3'
services:
  # Vector DB
  ob:
    image:  oceanbase/oceanbase-ce:4.3.5-lts
    container_name: ob
    restart: always
    # ports: # 生产环境建议不要暴露
    #   - 2881:2881
    networks:
      - fastgpt
    environment:
      # 这里的配置只有首次运行生效。修改后，重启镜像是不会生效的。需要把持久化数据删除再重启，才有效果
      - OB_SYS_PASSWORD=obsyspassword
      # 不同于传统数据库，OceanBase 数据库的账号包含更多字段，包括用户名、租户名和集群名。经典格式为"用户名@租户名#集群名"
      # 比如用mysql客户端连接时，根据本文件的默认配置，应该指定 "-uroot@tenantname"
      - OB_TENANT_NAME=tenantname
      - OB_TENANT_PASSWORD=tenantpassword
      # MODE分为MINI和NORMAL， 后者会最大程度使用主机资源
      - MODE=MINI
      - OB_SERVER_IP=127.0.0.1
      # 更多环境变量配置见oceanbase官方文档： https://www.oceanbase.com/docs/common-oceanbase-database-cn-1000000002013494
    volumes:
      - ../ob/data:/root/ob
      - ../ob/config:/root/.obd/cluster
    configs:
      - source: init_sql
        target: /root/boot/init.d/init.sql
    healthcheck:
      # obclient -h127.0.0.1 -P2881 -uroot@tenantname -ptenantpassword -e "SELECT 1;"
      test:
        [
          "CMD-SHELL",
          'obclient -h$${OB_SERVER_IP} -P2881 -uroot@$${OB_TENANT_NAME} -p$${OB_TENANT_PASSWORD} -e "SELECT 1;"',
        ]
      interval: 30s
      timeout: 10s
      retries: 1000
      start_period: 10s


  mongo:
    image: registry.cn-hangzhou.aliyuncs.com/fastgpt/mongo:5.0.18 # cpu 不支持 AVX 时候使用 4.4.29
    container_name: mongo
    restart: always
    networks:
      - fastgpt
    command: mongod --keyFile /data/mongodb.key --replSet rs0
    environment:
      - MONGO_INITDB_ROOT_USERNAME=myusername
      - MONGO_INITDB_ROOT_PASSWORD=mypassword
    volumes:
      - ./mongo/data:/data/db
    entrypoint:
      - bash
      - -c
      - |
        openssl rand -base64 128 > /data/mongodb.key
        chmod 400 /data/mongodb.key
        chown 999:999 /data/mongodb.key
        echo 'const isInited = rs.status().ok === 1
        if(!isInited){
          rs.initiate({
              _id: "rs0",
              members: [
                  { _id: 0, host: "mongo:27017" }
              ]
          })
        }' > /data/initReplicaSet.js
        # 启动MongoDB服务
        exec docker-entrypoint.sh "$$@" &

        # 等待MongoDB服务启动
        until mongo -u myusername -p mypassword --authenticationDatabase admin --eval "print('waited for connection')"; do
          echo "Waiting for MongoDB to start..."
          sleep 2
        done

        # 执行初始化副本集的脚本
        mongo -u myusername -p mypassword --authenticationDatabase admin /data/initReplicaSet.js

        # 等待docker-entrypoint.sh脚本执行的MongoDB服务进程
        wait $$!
  redis:
    image: redis:7.2-alpine
    container_name: redis
    networks:
      - fastgpt
    restart: always
    command: |
      redis-server --requirepass mypassword --loglevel warning --maxclients 10000 --appendonly yes --save 60 10 --maxmemory 4gb --maxmemory-policy noeviction
    healthcheck:
      test: ['CMD', 'redis-cli', '-a', 'mypassword', 'ping']
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 30s
    volumes:
      - ./redis/data:/data

  fastgpt:
    container_name: fastgpt
    image: registry.cn-hangzhou.aliyuncs.com/fastgpt/fastgpt:v4.13.0 # git
    ports:
      - 3000:3000
    networks:
      - fastgpt
    depends_on:
      - mongo
      - sandbox
      - pg
    restart: always
    environment:
      <<: [*x-share-db-config, *x-vec-config]
      # 前端外部可访问的地址，用于自动补全文件资源路径。例如 https:fastgpt.cn，不能填 localhost。这个值可以不填，不填则发给模型的图片会是一个相对路径，而不是全路径，模型可能伪造Host。
      FE_DOMAIN:
      # root 密码，用户名为: root。如果需要修改 root 密码，直接修改这个环境变量，并重启即可。
      DEFAULT_ROOT_PSW: 1234
      # 登录凭证密钥
      TOKEN_KEY: any
      # root的密钥，常用于升级时候的初始化请求
      ROOT_KEY: root_key
      # 文件阅读加密
      FILE_TOKEN_KEY: filetoken
      # 密钥加密key
      AES256_SECRET_KEY: fastgptkey

      # plugin 地址
      PLUGIN_BASE_URL: http://fastgpt-plugin:3000
      PLUGIN_TOKEN: *x-plugin-auth-token
      # sandbox 地址
      SANDBOX_URL: http://sandbox:3000
      # AI Proxy 的地址，如果配了该地址，优先使用
      AIPROXY_API_ENDPOINT: http://aiproxy:3000
      # AI Proxy 的 Admin Token，与 AI Proxy 中的环境变量 ADMIN_KEY
      AIPROXY_API_TOKEN: *x-aiproxy-token

      # 数据库最大连接数
      PG_URL: postgresql://username:password@pg:5432/postgres

      # 日志等级: debug, info, warn, error
      LOG_LEVEL: info
      STORE_LOG_LEVEL: warn
      # 工作流最大运行次数
      WORKFLOW_MAX_RUN_TIMES: 1000
      # 批量执行节点，最大输入长度
      WORKFLOW_MAX_LOOP_TIMES: 100
      # 对话文件过期天数
      CHAT_FILE_EXPIRE_TIME: 7
    volumes:
      - ./config.json:/app/data/config.json

  fastgpt-minio:
    image: minio/minio:RELEASE.2025-09-07T16-13-09Z
    container_name: fastgpt-minio
    restart: always
    networks:
      - fastgpt
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    volumes:
      - ./fastgpt-minio:/data
    command: server /data --console-address ":9001"
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:9000/minio/health/live']
      interval: 30s
      timeout: 20s
      retries: 3
  sandbox:
    container_name: sandbox
    image: registry.cn-hangzhou.aliyuncs.com/fastgpt/fastgpt-sandbox:v4.13.0
    networks:
      - fastgpt
    restart: always
  fastgpt-mcp-server:
    container_name: fastgpt-mcp-server
    image: registry.cn-hangzhou.aliyuncs.com/fastgpt/fastgpt-mcp_server:v4.13.0
    networks:
      - fastgpt
    ports:
      - 3005:3000
    restart: always
    environment:
      - FASTGPT_ENDPOINT=http://fastgpt:3000
  fastgpt-plugin:
    image: registry.cn-hangzhou.aliyuncs.com/fastgpt/fastgpt-plugin:v0.2.0
    container_name: fastgpt-plugin
    restart: always
    networks:
      - fastgpt
    environment:
      <<: *x-share-db-config
      AUTH_TOKEN: *x-plugin-auth-token
      S3_BUCKET: fastgpt-plugins
    depends_on:
      fastgpt-minio:
        condition: service_healthy
  # AI Proxy
  aiproxy:
    image: registry.cn-hangzhou.aliyuncs.com/labring/aiproxy:v0.3.2
    container_name: aiproxy
    restart: unless-stopped
    depends_on:
      aiproxy_pg:
        condition: service_healthy
    networks:
      - fastgpt
      - aiproxy
    environment:
      # 对应 fastgpt 里的AIPROXY_API_TOKEN
      ADMIN_KEY: *x-aiproxy-token
      # 错误日志详情保存时间（小时）
      LOG_DETAIL_STORAGE_HOURS: 1
      # 数据库连接地址
      SQL_DSN: postgres://postgres:aiproxy@aiproxy_pg:5432/aiproxy
      # 最大重试次数
      RETRY_TIMES: 3
      # 不需要计费
      BILLING_ENABLED: false
      # 不需要严格检测模型
      DISABLE_MODEL_CONFIG: true
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:3000/api/status']
      interval: 5s
      timeout: 5s
      retries: 10
  aiproxy_pg:
    image: registry.cn-hangzhou.aliyuncs.com/fastgpt/pgvector:0.8.0-pg15 # docker hub
    restart: unless-stopped
    container_name: aiproxy_pg
    volumes:
      - ./aiproxy_pg:/var/lib/postgresql/data
    networks:
      - aiproxy
    environment:
      TZ: Asia/Shanghai
      POSTGRES_USER: postgres
      POSTGRES_DB: aiproxy
      POSTGRES_PASSWORD: aiproxy
    healthcheck:
      test: ['CMD', 'pg_isready', '-U', 'postgres', '-d', 'aiproxy']
      interval: 5s
      timeout: 5s
      retries: 10
networks:
  fastgpt:
  aiproxy:
  vector:
configs:
  init_sql:
    name: init_sql
    content: |
      ALTER SYSTEM SET ob_vector_memory_limit_percentage = 30;
    
